syntax = "proto3";

package binance_converter.backend_api.exchange_plot;

option go_package = "/api/exchange_plot";

import "google/protobuf/timestamp.proto";
import "proto/converter.proto";

message timeInterval {
  google.protobuf.Timestamp start = 1;
  google.protobuf.Timestamp end = 2;
}

message plotParams {
  binance_converter.backend_api.converter.converterPair pair = 1;
  timeInterval interval = 2;
}

message plot {
  bytes image = 1;
}

service exchangePlot {
  rpc GetExchangePlot(plotParams) returns (plot);
}

enum AdditionalErrorCode {
  OK = 0;
  INVALID_TIME_INTERVAL = 100;
  INVALID_CONVERTER_PAIR = 101;
  INVALID_FORMAT = 102;
  INVALID_CURRENCY_CODE = 103;
  INVALID_BANK_CODE = 104;
}