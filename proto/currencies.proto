syntax = "proto3";
package binance_converter.backend_api.currencies;

option go_package = "/api/currencies";

import "google/protobuf/empty.proto";

enum eCurrencyType {
  CRYPTO = 0;
  CLASSIC = 1;
}

message currencyType {
    eCurrencyType type = 1;
}

message CurrencyTypes {
    repeated currencyType types = 1;
}

message bankName {
  string bankName = 1;
}

message bankNames {
  repeated bankName bankNames = 1;
}


message currencyCode {
  string currencyCode = 2;
}

message currencyCodes {
  repeated currencyCode currencyCodes = 2;
}

message fullCurrency {
  currencyType type = 1;
  currencyCode currencyCode = 2;
  bankName bankName = 3;
}

message fullCurrencies {
  repeated fullCurrency fullCurrencies = 1;
}




service currencies {
  rpc GetAvailableCurrencies(currencyType) returns (currencyCodes);
  rpc GetAvailableBankByCurrency(currencyCode) returns (bankNames);
  rpc SetCurrency(fullCurrency) returns (google.protobuf.Empty);
  rpc GetMyCurrencies(currencyType) returns (fullCurrencies);
  rpc DeleteCurrency(fullCurrency) returns (google.protobuf.Empty);
}

enum AdditionalErrorCode {
  OK = 0;
  INVALID_CURRENCY_TYPE = 100;
  INVALID_CURRENCY_CODE = 101;
  INVALID_BANK_CODE = 102;
}